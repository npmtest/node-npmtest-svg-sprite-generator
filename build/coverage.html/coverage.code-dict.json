{"/home/travis/build/npmtest/node-npmtest-svg-sprite-generator/test.js":"/* istanbul instrument in package npmtest_svg_sprite_generator */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-svg-sprite-generator/lib.npmtest_svg_sprite_generator.js":"/* istanbul instrument in package npmtest_svg_sprite_generator */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_svg_sprite_generator = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_svg_sprite_generator = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-svg-sprite-generator/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-svg-sprite-generator && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_svg_sprite_generator */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_svg_sprite_generator\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_svg_sprite_generator.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_svg_sprite_generator.rollup.js'] =\n            local.assetsDict['/assets.npmtest_svg_sprite_generator.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_svg_sprite_generator.__dirname + '/lib.npmtest_svg_sprite_generator.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-svg-sprite-generator/node_modules/svg-sprite-generator/lib/main.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _writer = require(\"./writer\");\n\nvar writer = _interopRequireWildcard(_writer);\n\nvar _sourceList = require(\"./source/list\");\n\nvar _sourceList2 = _interopRequireDefault(_sourceList);\n\nvar _parser = require(\"./parser\");\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar spriteFromFiles = function spriteFromFiles(files) {\n    return new Promise(function (res, rej) {\n        (0, _sourceList2[\"default\"])(files)().then(function (results) {\n            res(writer.getSpriteXml(results));\n        });\n    });\n};\n\nexports.spriteFromFiles = spriteFromFiles;","/home/travis/build/npmtest/node-npmtest-svg-sprite-generator/node_modules/svg-sprite-generator/lib/writer.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _es6Promise = require('es6-promise');\n\nvar writeToFile = function writeToFile(destPath, content) {\n    return new _es6Promise.Promise(function (res, rej) {\n        _fs2['default'].writeFile(destPath, content, function (err) {\n            if (err) {\n                rej(err);\n            } else {\n                res(destPath);\n            }\n        });\n    });\n};\n\nvar getSpriteXml = function getSpriteXml(svgs) {\n    return '<?xml version=\"1.0\" encoding=\"utf-8\"?>' + '\\n' + '<svg xmlns=\"http://www.w3.org/2000/svg\">' + '\\n' + svgs.map(function (s) {\n        return '<symbol' + (s.id ? ' id=\"' + s.id + '\"' : '') + (s.viewBox ? ' viewBox=\"' + s.viewBox + '\"' : '') + '>' + s.content + '\\n' + '</symbol>';\n    }).join('\\n') + '</svg>';\n};\n\nvar publicWriteToFile = function publicWriteToFile(filePath, svgs) {\n    return writeToFile(filePath, getSpriteXml(svgs));\n};\n\nvar publicWriteToConsole = function publicWriteToConsole(svgs) {\n    return new _es6Promise.Promise(function () {\n        console.log(getSpriteXml(svgs));\n    });\n};\n\nexports.getSpriteXml = getSpriteXml;\nexports.writeToFile = publicWriteToFile;\nexports.writeToConsole = publicWriteToConsole;","/home/travis/build/npmtest/node-npmtest-svg-sprite-generator/node_modules/svg-sprite-generator/lib/source/list.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _util = require(\"../util\");\n\nvar u = _interopRequireWildcard(_util);\n\nvar _parser = require(\"../parser\");\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar _es6Promise = require(\"es6-promise\");\n\nexports[\"default\"] = function (list) {\n    return function () {\n        return new _es6Promise.Promise(function (res, rej) {\n            var q = u.fileNameToObjectQueue(res);\n\n            list.forEach(function (item) {\n                q.push(typeof item === \"object\" ? item : {\n                    file: item\n                });\n            });\n        }).then(_parser2[\"default\"]);\n    };\n};\n\n;\nmodule.exports = exports[\"default\"];","/home/travis/build/npmtest/node-npmtest-svg-sprite-generator/node_modules/svg-sprite-generator/lib/util.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _fs = require(\"fs\");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _async = require(\"async\");\n\nvar _async2 = _interopRequireDefault(_async);\n\nvar _es6Promise = require(\"es6-promise\");\n\n/*\n * Slugify function taken from https://gist.github.com/mathewbyrne/1280286\n */\nvar idFromFileName = function idFromFileName(fileName) {\n    return fileName.toString().toLowerCase().replace(/\\.svg/g, \"\").replace(/\\s+/g, \"-\") // Replace spaces with -\n    .replace(/[^\\w\\-]+/g, \"\") // Remove all non-word chars\n    .replace(/\\-\\-+/g, \"-\") // Replace multiple - with single -\n    .replace(/^-+/, \"\") // Trim - from start of text\n    .replace(/-+$/, \"\"); // Trim - from end of text\n};\n\nvar fileNameToObject = function fileNameToObject(filePath) {\n    var id = arguments[1] === undefined ? null : arguments[1];\n\n    return new _es6Promise.Promise(function (res, rej) {\n        _fs2[\"default\"].readFile(filePath, function (err, data) {\n            if (err) {\n                return rej(err);\n            }\n\n            var idStr = id ? id : (function (parts) {\n                return idFromFileName(parts[parts.length - 1]);\n            })(filePath.split(\"/\"));\n\n            return res({\n                content: data.toString(\"utf8\"),\n                id: idStr\n            });\n        });\n    });\n};\n\nvar fileToObjectQueue = function fileToObjectQueue(drain) {\n    var results = [];\n\n    var q = _async2[\"default\"].queue(function (task, callback) {\n        if (_fs2[\"default\"].existsSync(task.file)) {\n            fileNameToObject(task.file, task.id).then(function (o) {\n                results.push(o);\n                callback();\n            });\n        } else {\n            // file not existing,\n            // just skip\n            callback();\n        }\n    });\n\n    q.drain = function () {\n        drain(results);\n    };\n\n    return q;\n};\n\nexports.fileNameToObject = fileNameToObject;\nexports.fileNameToObjectQueue = fileToObjectQueue;\nexports.idFromFileName = idFromFileName;","/home/travis/build/npmtest/node-npmtest-svg-sprite-generator/node_modules/svg-sprite-generator/lib/parser.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _cheerio = require('cheerio');\n\nvar _cheerio2 = _interopRequireDefault(_cheerio);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\n/*\n * Transform an array of SVG content to an array of objects those are\n * ready for sprite generation\n *\n * @param svgs - Array of arrays, each has 2 element, 0 -> id, 1 -> svg content\n * @return contents - Array\n */\n\nexports['default'] = function (svgs) {\n    return svgs.map(function (s) {\n        var svgTag = _cheerio2['default'].load('<div>' + s.content + '</div>', {\n            xmlMode: true\n        })('svg');\n\n        return svgTag.length ? {\n            content: svgTag.html(),\n            viewBox: svgTag.attr('viewBox'),\n            id: s.id ? s.id : svgTag.attr('id') ? svgTag.attr('id') : undefined\n        } : undefined;\n    });\n};\n\n;\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-svg-sprite-generator/node_modules/svg-sprite-generator/Gruntfile.js":"module.exports = function(grunt) {\n    \n    grunt.initConfig({\n        exec: { \n            babel: {\n                command: 'babel src -d lib',\n                stdout: true\n            }\n        }\n    });\n\n    grunt.loadNpmTasks('grunt-exec');\n    grunt.registerTask('default', ['exec']);\n}\n","/home/travis/build/npmtest/node-npmtest-svg-sprite-generator/node_modules/svg-sprite-generator/lib/bin.js":"\"use strict\";\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _generator = require(\"./generator\");\n\nvar _generator2 = _interopRequireDefault(_generator);\n\n// run\n(0, _generator2[\"default\"])();","/home/travis/build/npmtest/node-npmtest-svg-sprite-generator/node_modules/svg-sprite-generator/lib/generator.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _writer = require(\"./writer\");\n\nvar writer = _interopRequireWildcard(_writer);\n\nvar _sourceList = require(\"./source/list\");\n\nvar _sourceList2 = _interopRequireDefault(_sourceList);\n\nvar _sourceCsv = require(\"./source/csv\");\n\nvar _sourceCsv2 = _interopRequireDefault(_sourceCsv);\n\nvar _sourceFolder = require(\"./source/folder\");\n\nvar _sourceFolder2 = _interopRequireDefault(_sourceFolder);\n\nvar _sourceSprite = require(\"./source/sprite\");\n\nvar _sourceSprite2 = _interopRequireDefault(_sourceSprite);\n\nvar _commander = require(\"commander\");\n\nvar _commander2 = _interopRequireDefault(_commander);\n\nvar _async = require(\"async\");\n\nvar _async2 = _interopRequireDefault(_async);\n\nexports[\"default\"] = function () {\n    _commander2[\"default\"].version(\"0.0.1\").option(\"-c --csv <csv>\", \"CSV file path\").option(\"-d --directory <directory>\", \"SVG folder\").option(\"-l --list <list>\", \"List of files\").option(\"-o --output <output>\", \"Out put to file\").option(\"-s --sprite <sprite>\", \"Another sprite file\").parse(process.argv);\n\n    var fnList = [\"sprite\", \"csv\", \"directory\", \"list\"].filter(function (i) {\n        return !!_commander2[\"default\"][i];\n    }).map(function (i) {\n        switch (i) {\n            case \"sprite\":\n                return (0, _sourceSprite2[\"default\"])(_commander2[\"default\"].sprite);\n            case \"csv\":\n                return (0, _sourceCsv2[\"default\"])(_commander2[\"default\"].csv);\n            case \"directory\":\n                return (0, _sourceFolder2[\"default\"])(_commander2[\"default\"].directory);\n            case \"list\":\n                return (0, _sourceList2[\"default\"])(_commander2[\"default\"].list.split(\",\").map(function (i) {\n                    return i.trim();\n                }));\n        }\n    });\n\n    // process them all\n    _async2[\"default\"].map(fnList, function (fn, callback) {\n        fn().then(function (objects) {\n            callback(false, objects);\n        }, function (error) {\n            callback(true, error);\n        });\n    }, function (err, results) {\n        if (results.length == 0) {\n            return;\n        }\n        // reduces the results into one\n        var svgs = results.reduce(function (prev, curr) {\n            return prev.concat(curr);\n        }, []);\n\n        if (_commander2[\"default\"].output) {\n            writer.writeToFile(_commander2[\"default\"].output, svgs);\n        } else {\n            writer.writeToConsole(svgs);\n        }\n    });\n};\n\n;\nmodule.exports = exports[\"default\"];","/home/travis/build/npmtest/node-npmtest-svg-sprite-generator/node_modules/svg-sprite-generator/lib/source/csv.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _fs = require(\"fs\");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _util = require(\"../util\");\n\nvar u = _interopRequireWildcard(_util);\n\nvar _parser = require(\"../parser\");\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar _es6Promise = require(\"es6-promise\");\n\nvar csvStringToSvgContents = function csvStringToSvgContents(str) {\n    return (function (fileList) {\n        return new _es6Promise.Promise(function (res, rej) {\n            var q = u.fileNameToObjectQueue(res);\n            fileList.forEach(function (item) {\n                q.push(item);\n            });\n        });\n    })(str.split(\"\\n\").map(function (line) {\n        var parts = line.split(\",\").map(function (item) {\n            return item.trim();\n        });\n\n        return {\n            id: parts[0],\n            file: parts[1]\n        };\n    }).filter(function (item) {\n        return !!item.file;\n    }));\n};\n\n/*\n * Returns a function that\n * takes a CSV file and export as SVG content list\n * @param filePath - path to svg file\n * @return fn - the source function\n */\n\nexports[\"default\"] = function (filePath) {\n    return function () {\n        return new _es6Promise.Promise(function (res, rej) {\n            _fs2[\"default\"].readFile(filePath, function (err, data) {\n                if (err) {\n                    return rej(err);\n                }\n                return csvStringToSvgContents(data.toString(\"utf8\")).then(res);\n            });\n        }).then(_parser2[\"default\"]);\n    };\n};\n\n;\nmodule.exports = exports[\"default\"];","/home/travis/build/npmtest/node-npmtest-svg-sprite-generator/node_modules/svg-sprite-generator/lib/source/folder.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _fs = require(\"fs\");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _util = require(\"../util\");\n\nvar u = _interopRequireWildcard(_util);\n\nvar _parser = require(\"../parser\");\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar _es6Promise = require(\"es6-promise\");\n\nexports[\"default\"] = function (folderPath) {\n    return function () {\n        return new _es6Promise.Promise(function (res, rej) {\n            var q = u.fileNameToObjectQueue(res);\n            _fs2[\"default\"].readdir(folderPath, function (err, files) {\n\n                if (err) {\n                    return rej(err);\n                }\n\n                files.filter(function (f) {\n                    // only take svg\n                    return /\\.svg/.test(f);\n                }).forEach(function (f) {\n                    q.push({\n                        file: folderPath + \"/\" + f\n                    });\n                });\n            });\n        }).then(_parser2[\"default\"]);\n    };\n};\n\n;\nmodule.exports = exports[\"default\"];","/home/travis/build/npmtest/node-npmtest-svg-sprite-generator/node_modules/svg-sprite-generator/lib/source/sprite.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _fs = require(\"fs\");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _cheerio = require(\"cheerio\");\n\nvar _cheerio2 = _interopRequireDefault(_cheerio);\n\nvar _util = require(\"../util\");\n\nvar u = _interopRequireWildcard(_util);\n\nvar _parser = require(\"../parser\");\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar _es6Promise = require(\"es6-promise\");\n\nexports[\"default\"] = function (file) {\n    return function () {\n        return new _es6Promise.Promise(function (res, rej) {\n            _fs2[\"default\"].readFile(file, function (err, data) {\n                if (err) {\n                    return rej(err);\n                }\n\n                // data\n                var q = _cheerio2[\"default\"].load(data.toString(\"utf8\"), {\n                    xmlMode: true\n                });\n\n                var symbols = q(\"symbol\");\n\n                if (symbols.length == 0) {\n                    return res([]);\n                }\n\n                var eles = [];\n                symbols.each(function (index, ele) {\n                    var t = q(this);\n                    eles.push({\n                        id: t.attr(\"id\"),\n                        viewBox: t.attr(\"viewBox\"),\n                        content: t.html()\n                    });\n                });\n                res(eles);\n            });\n        });\n    };\n};\n\n;\nmodule.exports = exports[\"default\"];","/home/travis/build/npmtest/node-npmtest-svg-sprite-generator/node_modules/svg-sprite-generator/src/main.js":"import * as writer from \"./writer\";\nimport {default as srcList} from \"./source/list\";\nimport {default as parse} from \"./parser\";\n\nlet spriteFromFiles = function (files) {\n    return new Promise(function (res, rej) {\n        srcList(files)()\n            .then(function (results) {\n                res(writer.getSpriteXml(results));\n            });\n    });\n};\n\nexport {spriteFromFiles};\n"}